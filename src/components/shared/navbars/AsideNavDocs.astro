---
import type { SidebarNavbarItem } from "../../../types";
import { docsConfig } from "src/config/docs";
import { Icon } from "astro-icon/components";
import Button from "@components/Button.astro";

export interface DocSidebarNav {
  items: SidebarNavbarItem[];
}

const { sidebarNavbar } = docsConfig;
const { pathname } = Astro.url;

const getSection = (): string | undefined => {
  const section = sidebarNavbar.find((section) =>
    section.items?.some((item) => item.title.toLowerCase() === lastPart),
  );
  return section?.title;
};

const lastPart = pathname.split("/").pop()?.toLowerCase(); // Obtiene la última parte de la URL en minúsculas
const sectionTitle = getSection();
---

<script>
  import { animate } from "motion";

  let isSideAnimate = false;

  function getElementId(elementId: string) {
    return document.getElementById(elementId);
  }
  const $btnSide = getElementId("btnSide");
  const $side = getElementId("sidebar");
  const $blur = getElementId("blurCover");

  $btnSide?.addEventListener("click", () => {
    isSideAnimate = !isSideAnimate;

    if (!isSideAnimate) {
      animate("#sidebar", { opacity: 0, x: 0 }, { duration: 0.2 });
      animate("#blurCover", { opacity: 0 }, { duration: 0.2 });
      setTimeout(() => {
        $side?.classList.add("hidden");
        $blur?.classList.add("hidden");
      }, 200);
    } else {
      animate("#sidebar", { opacity: 1, x: 0 }, { duration: 0.2 });
      animate("#blurCover", { opacity: 1 }, { duration: 0.2 });
      $side?.classList.remove("hidden");
      $blur?.classList.remove("hidden");
    }
  });
</script>

<aside
  class="w-full lg:hidden top-[60px] fixed left-0 right-0 z-20 bg-tertiary-600 border-b border-tertiary-200"
>
  <div class="py-3 flex items-center gap-4 container mx-auto px-5">
    <Button
      id="btnSide"
      class="text-xl flex bg-tertiary-300 rounded-md text-secondary-200 p-2"
    >
      <Icon name="menu" />
    </Button>

    <p class="flex items-center gap-2">
      {sectionTitle}
      <Icon name="chevron-right" />
      <span class="text-secondary-200"> {lastPart} </span>
    </p>
  </div>
  <div
    id="blurCover"
    class="w-full h-screen hidden opacity-0 fixed bg-[#020510]/70 backdrop-blur-sm"
  >
  </div>
  <div
    id="sidebar"
    class="lg:on-this-page hidden opacity-0 fixed w-3/4 bg-[#0a0d19]/80 backdrop-blur-md space-y-7 mx-auto container h-full p-5"
  >
    {
      sidebarNavbar.map((section) => (
        <div>
          <h4 class="on-this-page font-bold text-secondary-200 leading-none mb-2">
            {section.title}
          </h4>
          <ul class="space-y-2">
            {section.items?.map(({ href, icon, title }) => (
              <li>
                <a
                  href={href}
                  class:list={[
                    "text-small flex gap-3 items-center",
                    {
                      "text-primary-400": pathname === href,
                      "hover:text-secondary-200": pathname !== href,
                    },
                  ]}
                >
                  {icon && (
                    <Icon
                      name={icon}
                      class:list={[
                        "bg-tertiary-400 text-3xl p-2 rounded-md",
                        { "text-primary-400": pathname === href },
                      ]}
                    />
                  )}
                  {title}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</aside>
